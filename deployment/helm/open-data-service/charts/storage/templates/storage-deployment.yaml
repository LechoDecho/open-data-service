apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      tier: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        tier: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:storage-latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          env:
            - name: DATABASE_HOST
              value: "storage-db-service"
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              value: "{{ .Values.global.postgrest.database }}"
            - name: DATABASE_USER
              value: "{{ .Values.global.postgrest.username }}"
            - name: DATABASE_PW
              value: "{{ .Values.global.postgrest.password }}"
            - name: DATABASE_ANON
              value: "{{ .Values.global.postgrest.anon }}"

          ports:
            - containerPort: 80

          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10

          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10