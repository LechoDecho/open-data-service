apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (HEAD)
    traefik.enable: "true"
    traefik.http.middlewares.adapter-stripprefix.stripprefix.prefixes: /api/adapter
    traefik.http.routers.to-adapter.middlewares: adapter-stripprefix@docker
    traefik.http.routers.to-adapter.rule: PathPrefix(`/api/adapter`)
    traefik.http.services.adapter.loadbalancer.server.port: "8080"
  creationTimestamp: null
  labels:
    io.kompose.service: adapter
  name: adapter
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.19.0 (HEAD)
        traefik.enable: "true"
        traefik.http.middlewares.adapter-stripprefix.stripprefix.prefixes: /api/adapter
        traefik.http.routers.to-adapter.middlewares: adapter-stripprefix@docker
        traefik.http.routers.to-adapter.rule: PathPrefix(`/api/adapter`)
        traefik.http.services.adapter.loadbalancer.server.port: "8080"
      creationTimestamp: null
      labels:
        io.kompose.service: adapter
    spec:
      containers:
      - env:
        - name: AMQP_EXCHANGE
          value: ods_global
        - name: AMQP_IMPORT_FAILED_TOPIC
          value: datasource.execution.failed
        - name: AMQP_IMPORT_SUCCESS_TOPIC
          value: datasource.execution.success
        - name: AMQP_PUBLISH_BACKOFF
          value: "1000"
        - name: AMQP_PUBLISH_RETRIES
          value: "5"
        - name: DB_URL
          value: jdbc:postgresql://adapter-db:5432/adapterservice
        - name: RABBIT_HOST
          value: rabbitmq
        - name: RABBIT_PORT
          value: "5672"
        - name: RABBIT_PWD
          value: R4bb!7_4DM_p4SS
        - name: RABBIT_USR
          value: rabbit_adm
        image: /adapter
        name: adapter
        resources: {}
      restartPolicy: Always
status: {}
