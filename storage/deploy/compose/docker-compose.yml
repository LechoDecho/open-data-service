version: '3'

services:
  storage-service: # Wraps postgres database with API
    build: ../../docker/postgrest/
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://postgrest:postgres-wrapper-pw@storage-db:5432/ods
      PGRST_DB_SCHEMA: storage
      PGRST_DB_ANON_ROLE: postgrest #In production this role should not be the same as the one used for the connection
    depends_on:
      - storage-db
      - storage-db-liquibase # TODO: make sure the migration runs through before reading db structure

  storage-db:
    image: postgres:12-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ods
      POSTGRES_USER: ods_admin
      POSTGRES_PASSWORD: ods_pw
  # Uncomment this if you want to persist the data.
  # volumes:
  #   - "./pgdata:/var/lib/postgresql/data"

  storage-db-ui: # management UI for Postgres
    image: adminer
    ports:
      - 8081:8080

  storage-db-liquibase: # perform database migration on start up
    build: ../../docker/liquibase/
    environment:
      LIQUIBASE_URL: jdbc:postgresql://storage-db:5432/ods
      LIQUIBASE_USERNAME: ods_admin
      LIQUIBASE_PASSWORD: ods_pw
      LIQUIBASE_CHANGELOG: /liquibase/changelog.xml
    volumes:
      - ../../changelog.xml:/liquibase/changelog.xml # TODO: Sql Injection is currently
    depends_on: 
      - storage-db

  swagger: # API documentation for storage service
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    environment:
      API_URL: http://localhost:3000/

  storage-service-it:
    build:
      dockerfile: Dockerfile
      context: ../../integration-test
    image: open-data-service/ods-main/storage-service-it
    ports:
      - "8091:8081"
    environment:
      STORAGE_API: http://storage-service:3000
