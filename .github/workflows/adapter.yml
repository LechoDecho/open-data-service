name: Adapter Build & Test & Publish

on: [push]

jobs:
  adapter-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build and Test
        run: |
          docker-compose -f docker-compose.yml build adapter

      - name: Integration-test
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml build adapter-it
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d adapter
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml up --exit-code-from adapter-it adapter-it
          docker-compose logs
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml down

      - name: Push to registry
        if: github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

          IMAGE_ID=$(sed -n 's/^DOCKER_REGISTRY=//p' .env)/adapter
          echo ::set-env name=IMAGE_ID::$(echo $IMAGE_ID)

          ADAPTER_VERSION=$(grep "version =" ./adapter/src/main/resources/application.properties | awk '{print $3}' | sed "s/[']//g")

          docker tag $IMAGE_ID $IMAGE_ID:$ADAPTER_VERSION
          docker tag $IMAGE_ID $IMAGE_ID:latest

          docker push $IMAGE_ID:$ADAPTER_VERSION
          docker push $IMAGE_ID:latest

      - name: Save Docker image as artifact
        run: |
          docker save $IMAGE_ID > adapter.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v1
        with:
          name: adapter-artifact
          path: adapter.tar
